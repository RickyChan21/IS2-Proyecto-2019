#include <Wire.h> "Librerias para las conecciones del BME 280";
#include <Adafruit_Sensor.h>
#include <Adafruit_BME280.h>
#include <ESP8266WiFi.h>
#include "Adafruit_MQTT.h"
#include "Adafruit_MQTT_Client.h"
#define SEALEVELPRESSURE_HPA (1013.25)

Adafruit_BME280 bme; 

#define Frio 02
#define Calor 14 

#define WLAN_SSID       "Skynet"
#define WLAN_PASS       "2!,y^5#t5<;T$eC*zBUb4BM)'[N9Em>G"

#define HOST        "172.20.160.108"
#define PORT        1883
#define USERNAME    "username"
#define PASSWORD    "12345678" 
int x;
int y;
unsigned long delayTime;
WiFiClient client;
Adafruit_MQTT_Client mqtt(&client, HOST, PORT, USERNAME, PASSWORD);


Adafruit_MQTT_Publish Temperatura = Adafruit_MQTT_Publish(&mqtt, "Temperatura");
Adafruit_MQTT_Publish Cold = Adafruit_MQTT_Publish(&mqtt, "Cold");
Adafruit_MQTT_Publish Hot= Adafruit_MQTT_Publish(&mqtt, "Hot");

void MQTT_connect();
void setup() {
  WiFi.forceSleepWake();
  WiFi.mode(WIFI_STA);
  Serial.begin(115200);
  Serial.print("Connecting to ");
  Serial.println(WLAN_SSID);

  WiFi.begin(WLAN_SSID, WLAN_PASS);
  while (WiFi.status() != WL_CONNECTED) 
  {
    delay(500);
    Serial.print(".");
  }
  
  Serial.println();
  Serial.println("WiFi connected");
  Serial.println("IP address: "); Serial.println(WiFi.localIP());
  MQTT_connect();
  pinMode(Frio, OUTPUT);
  pinMode(Calor, OUTPUT);
  Serial.begin(115200);
  Serial.println(F("BME280 test"));
    
  bool status;

    status = bme.begin(0x76); 
    if (!status) {
        Serial.println("Could not find a valid BME280 sensor, check wiring!");
        while (1);
    }
      
    Serial.println("-- Default Test --");
    delayTime = 1000;

    Serial.println();
    delay(1000);
   x=bme.readTemperature();
    delay(1000);
}

void loop() {
 
 y=bme.readTemperature();
 
 if (x<y || x>y){
  
  if (x > 29){
  digitalWrite(Frio,HIGH);
  Cold.publish("Encendido");
  }
  else if (x<=26){
  digitalWrite(Frio,LOW);
  Cold.publish("Apagado");
  }
  if (x <24) {
    digitalWrite(Calor,HIGH);
    Hot.publish("Encendido");
  }
   else if (x >=16) {
   digitalWrite(Calor,LOW);
   Hot.publish("Apagado");
  }
  
  x=y;
  Temperatura.publish(x);
  Serial.print("Temperature = ");
  Serial.print(x);
  Serial.println("*C");
  Serial.println();
  delay(5000);
 }
 
}

void MQTT_connect() {
  int8_t ret;
  if (mqtt.connected()) {
    return;
  }
 
  Serial.print("Connecting to MQTT... ");
  uint8_t retries = 3;
  while ((ret = mqtt.connect()) != 0) { // connect will return 0 for connected
       Serial.println(mqtt.connectErrorString(ret));
       Serial.println("Retrying MQTT connection in 5 seconds...");
       mqtt.disconnect();
       delay(5000);  // wait 5 seconds
       retries--;
       if (retries == 0) {
         // basically die and wait for WDT to reset me
         while (1);
       }
  }
  Serial.println("MQTT Connected!");
}
